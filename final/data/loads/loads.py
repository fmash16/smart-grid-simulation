#!/usr/bin/python3

load = [0.655 , 0.625 , 0.595 , 0.545 , 0.510 , 0.480 , 0.405 , 0.385 , 0.380
        , 0.335 , 0.300 , 0.315 , 0.325 , 0.355 , 0.355 , 0.360 , 0.360 , 0.365
        , 0.390 , 0.425 , 0.455 , 0.475 , 0.480 , 0.495 , 0.515 , 0.525 , 0.530
        , 0.530 , 0.530 , 0.530 , 0.555 , 0.575 , 0.595 , 0.600 , 0.610 , 0.615
        , 0.645 , 0.680 , 0.695 , 0.710 , 0.735 , 0.745 , 0.755 , 0.770 , 0.775
        , 0.715 , 0.720 , 0.650 , 0.620 , 0.590 , 0.560 , 0.545 , 0.535 , 0.515
        , 0.515 , 0.525 , 0.525 , 0.535 , 0.540 , 0.550 , 0.575 , 0.590 , 0.625
        , 0.645 , 0.665 , 0.690 , 0.720 , 0.740 , 0.765 , 0.740 , 0.725 , 0.685
        , 0.650]

load_new_upper = [ 3760 ,3760 ,3760 ,3760 ,3760 ,3760 ,3745 ,3545 ,3545 ,3545 ,3545
        ,3545 ,3485 ,3485 ,3485 ,3485 ,3485 ,3485 ,3485 ,3485 ,3470 ,3470 ,3470
        ,3470 ,3470 ,3470 ,3470 ,3470 ,3470 ,3470 ,3470 ,3470 ,3470 ,3470 ,3470
        ,3470 ,3470 ,3470 ,3470 ,3470 ,3470 ,3470 ,3470 ,3470 ,3470 ,3470 ,3470
        ,3470 ,3470 ,3470 ,3470 ,3470 ,3470 ,3470 ,3843 ,3843 ,3843 ,3843 ,3843
        ,3843 ,3843 ,3843 ,3843 ,3878 ,3878 ,3878 ,3505 ,3505 ,3505 ,3505 ,3505
        ,3505 ,3505 ,2065 ,2065 ,2065 ,2065 ,2065 ,2065 ,2065 ,2065 ,565  ,565 
        ,565  ,565  ,565  ,580  ,500  ,700  ,700  ,700  ,700  ,715  ,715  ,715 
        ,715  ,715  ,700  ,700  ,425  ,425  ,365  ,365  ,365  ,365  ,365  ,365 
        ,365  ,365  ,365  ,365  ,365  ,365  ,365  ,365  ,365  ,580  ,580  ,580 
        ,580  ,580  ,580  ,580  ,580  ,580  ,580  ,580  ,580  ,580  ,565  ,565 
        ,565  ,565  ,565  ,565  ,565  ,565  ,565  ,565  ,565  ,550  ,610  ,610 
        ,410  ,410  ,410  ,410  ,410  ,410  ,410  ,410  ,410  ,410  ,410  ,410 
        ,410  ,410  ,410  ,425  ,425  ,425  ,425  ,425  ,425  ,425  ,1925 ,1925
        ,1925 ,2185 ,2185 ,2185 ,2185 ,2185 ,2185 ,2185 ,2185 ,2185 ,2185 ,2185
        ,2385 ,2385 ,2370 ,2370 ,2370 ,2370 ,2370 ,2370 ,2170 ,2170 ,2170 ,670 
        ,670  ,670  ,670  ,730  ,530  ,530  ,530  ,530  ,530  ,530  ,530  ,730 
        ,730  ,730  ,730  ,730  ,730  ,730  ,730  ,730  ,745  ,745  ,745  ,765 
        ,765  ,765  ,705  ,705  ,705  ,720  ,720  ,720  ,720  ,720  ,720  ,720 
        ,740  ,815  ,1015 ,1015 ,1015 ,1015 ,1015 ,1015 ,1015 ,1015 ,1015 ,1015
        ,815  ,815  ,2315 ,2315 ,2255 ,2255 ,2255 ,2255 ,2235 ,2235 ,2235 ,2235
        ,2235 ,2235 ,2235 ,2235 ,2435 ,2435 ,2435 ,2435 ,2435 ,2435 ,2435 ,2435
        ,2435 ,2435 ,2435 ,2435 ,2435 ,2435 ,2435 ,2435 ,2435 ,2435 ,2435 ,2435
        ,2420 ,2420 ,2420 ,2440 ,2440 ,2440 ,2440 ,2440 ,3940 ,3940 ,3740 ,3720
        ,3520 ,3520 ]

load_new_lower = [330, 500, 500, 500, 500, 500, 485, 485, 485, 485, 485, 485, 485, 485, 485, 485, 485, 485, 485, 485, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 470, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 520, 500, 700, 700, 700, 700, 715, 715, 715, 715, 715, 700, 700, 425, 425, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 580, 580, 580, 580, 580, 580, 580, 565, 565, 565, 565, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 350, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 410, 470, 470, 470, 670, 670, 670, 610, 610, 610, 610, 610, 610, 625, 565, 565, 585, 585, 585, 585, 585, 585, 600, 600, 600, 660, 660, 660, 660, 740, 755, 755, 755, 755, 755, 755, 755, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 535, 535, 535, 535, 535, 535, 535, 535, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 770, 770, 770, 770, 770, 755, 755, 555, 535, 535, 535 ]

load_new_medium = [2005, 2175, 2175, 2175, 2175, 2175, 2175, 2175, 2175, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1930, 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 470 , 470 , 470 , 470 , 470 , 470 , 470 , 470 , 470 , 520 , 520 , 520 , 520 , 520 , 520 , 520 , 520 , 520 , 520 , 520 , 520 , 720 , 720 , 720 , 720 , 720 , 720 , 720 , 720 , 720 , 720 , 720 , 720 , 700 , 900 , 900 , 900 , 700 , 715 , 715 , 715 , 715 , 715 , 700 , 700 , 425 , 425 , 365 , 365 , 365 , 365 , 365 , 365 , 365 , 365 , 365 , 365 , 365 , 365 , 365 , 365 , 365 , 580 , 580 , 580 , 580 , 580 , 580 , 580 , 565 , 565 , 565 , 565 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 610 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 410 , 470 , 470 , 470 , 670 , 670 , 670 , 610 , 610 , 610 , 610 , 610 , 610 , 625 , 565 , 565 , 585 , 585 , 585 , 785 , 785 , 785 , 800 , 1000, 1000, 2560, 2560, 2680, 2680, 2900, 2915, 2915, 2915, 2915, 2915, 2915, 1215, 1015, 1015, 1015, 1015, 1015, 815 , 2315, 2315, 815 , 815 , 815 , 815 , 595 , 595 , 535 , 535 , 735 , 735 , 735 , 735 , 1135, 1135, 1135, 1135, 1135, 1135, 1135, 935 , 935 , 935 , 1335, 1335, 1335, 1350, 1350, 1350, 2850, 2850, 2850, 2850, 2850, 2850, 2850, 2870, 2870, 2870, 2870, 2670, 2655, 2655, 2655, 2635, 2635, 2635 ]

time_new = [ "2019-04-21 00:00:00", "2019-04-21 00:05:00", "2019-04-21 00:10:00", 
"2019-04-21 00:15:00", "2019-04-21 00:20:00", "2019-04-21 00:25:00",
"2019-04-21 00:30:00", "2019-04-21 00:35:00", "2019-04-21 00:40:00",
"2019-04-21 00:45:00", "2019-04-21 00:50:00", "2019-04-21 00:55:00",
"2019-04-21 01:00:00", "2019-04-21 01:05:00", "2019-04-21 01:10:00",
"2019-04-21 01:15:00", "2019-04-21 01:20:00", "2019-04-21 01:25:00",
"2019-04-21 01:29:59", "2019-04-21 01:34:59", "2019-04-21 01:39:59",
"2019-04-21 01:44:59", "2019-04-21 01:49:59", "2019-04-21 01:54:59",
"2019-04-21 01:59:59", "2019-04-21 02:04:59", "2019-04-21 02:09:59",
"2019-04-21 02:14:59", "2019-04-21 02:19:59", "2019-04-21 02:24:59",
"2019-04-21 02:29:59", "2019-04-21 02:34:59", "2019-04-21 02:39:59",
"2019-04-21 02:44:59", "2019-04-21 02:49:59", "2019-04-21 02:54:59",
"2019-04-21 02:59:59", "2019-04-21 03:04:59", "2019-04-21 03:09:59",
"2019-04-21 03:14:59", "2019-04-21 03:19:59", "2019-04-21 03:24:59",
"2019-04-21 03:29:59", "2019-04-21 03:34:59", "2019-04-21 03:39:59",
"2019-04-21 03:44:59", "2019-04-21 03:49:59", "2019-04-21 03:54:59",
"2019-04-21 03:59:59", "2019-04-21 04:04:59", "2019-04-21 04:09:59",
"2019-04-21 04:14:59", "2019-04-21 04:19:59", "2019-04-21 04:24:59",
"2019-04-21 04:29:59", "2019-04-21 04:34:59", "2019-04-21 04:39:59",
"2019-04-21 04:44:59", "2019-04-21 04:49:59", "2019-04-21 04:54:59",
"2019-04-21 04:59:59", "2019-04-21 05:04:59", "2019-04-21 05:09:59",
"2019-04-21 05:14:59", "2019-04-21 05:19:59", "2019-04-21 05:24:59",
"2019-04-21 05:29:59", "2019-04-21 05:34:59", "2019-04-21 05:39:59",
"2019-04-21 05:44:59", "2019-04-21 05:49:59", "2019-04-21 05:54:59",
"2019-04-21 05:59:59", "2019-04-21 06:04:59", "2019-04-21 06:09:59",
"2019-04-21 06:14:59", "2019-04-21 06:19:59", "2019-04-21 06:24:59",
"2019-04-21 06:29:59", "2019-04-21 06:34:59", "2019-04-21 06:39:59",
"2019-04-21 06:44:59", "2019-04-21 06:49:59", "2019-04-21 06:54:59",
"2019-04-21 06:59:59", "2019-04-21 07:04:59", "2019-04-21 07:09:59",
"2019-04-21 07:14:59", "2019-04-21 07:19:59", "2019-04-21 07:24:59",
"2019-04-21 07:29:59", "2019-04-21 07:34:59", "2019-04-21 07:39:59",
"2019-04-21 07:44:59", "2019-04-21 07:49:59", "2019-04-21 07:54:59",
"2019-04-21 07:59:59", "2019-04-21 08:04:59", "2019-04-21 08:09:59",
"2019-04-21 08:14:59", "2019-04-21 08:19:59", "2019-04-21 08:24:59",
"2019-04-21 08:29:59", "2019-04-21 08:34:59", "2019-04-21 08:39:59",
"2019-04-21 08:44:59", "2019-04-21 08:49:59", "2019-04-21 08:54:59",
"2019-04-21 08:59:59", "2019-04-21 09:04:59", "2019-04-21 09:09:59",
"2019-04-21 09:14:59", "2019-04-21 09:19:59", "2019-04-21 09:24:59",
"2019-04-21 09:29:59", "2019-04-21 09:34:59", "2019-04-21 09:39:59",
"2019-04-21 09:44:59", "2019-04-21 09:49:59", "2019-04-21 09:54:59",
"2019-04-21 09:59:59", "2019-04-21 10:04:59", "2019-04-21 10:09:59",
"2019-04-21 10:14:59", "2019-04-21 10:19:59", "2019-04-21 10:24:59",
"2019-04-21 10:29:59", "2019-04-21 10:34:59", "2019-04-21 10:39:59",
"2019-04-21 10:44:59", "2019-04-21 10:49:59", "2019-04-21 10:54:59",
"2019-04-21 10:59:59", "2019-04-21 11:04:59", "2019-04-21 11:09:59",
"2019-04-21 11:14:59", "2019-04-21 11:19:59", "2019-04-21 11:24:59",
"2019-04-21 11:29:59", "2019-04-21 11:34:59", "2019-04-21 11:39:59",
"2019-04-21 11:44:59", "2019-04-21 11:49:59", "2019-04-21 11:54:59",
"2019-04-21 11:59:59", "2019-04-21 12:04:59", "2019-04-21 12:09:59",
"2019-04-21 12:14:59", "2019-04-21 12:19:59", "2019-04-21 12:24:59",
"2019-04-21 12:29:59", "2019-04-21 12:34:59", "2019-04-21 12:39:59",
"2019-04-21 12:44:59", "2019-04-21 12:49:59", "2019-04-21 12:54:59",
"2019-04-21 12:59:59", "2019-04-21 13:04:59", "2019-04-21 13:09:59",
"2019-04-21 13:14:59", "2019-04-21 13:19:59", "2019-04-21 13:24:59",
"2019-04-21 13:29:59", "2019-04-21 13:34:59", "2019-04-21 13:39:59",
"2019-04-21 13:44:59", "2019-04-21 13:49:59", "2019-04-21 13:54:59",
"2019-04-21 13:59:59", "2019-04-21 14:04:59", "2019-04-21 14:09:59",
"2019-04-21 14:14:59", "2019-04-21 14:19:59", "2019-04-21 14:24:59",
"2019-04-21 14:29:59", "2019-04-21 14:34:59", "2019-04-21 14:39:59",
"2019-04-21 14:44:59", "2019-04-21 14:49:59", "2019-04-21 14:54:59",
"2019-04-21 14:59:59", "2019-04-21 15:04:59", "2019-04-21 15:09:59",
"2019-04-21 15:14:59", "2019-04-21 15:19:59", "2019-04-21 15:24:59",
"2019-04-21 15:29:59", "2019-04-21 15:34:59", "2019-04-21 15:39:59",
"2019-04-21 15:44:59", "2019-04-21 15:49:59", "2019-04-21 15:54:59",
"2019-04-21 15:59:59", "2019-04-21 16:04:59", "2019-04-21 16:09:59",
"2019-04-21 16:14:59", "2019-04-21 16:19:59", "2019-04-21 16:24:59",
"2019-04-21 16:29:59", "2019-04-21 16:34:59", "2019-04-21 16:39:59",
"2019-04-21 16:44:59", "2019-04-21 16:49:59", "2019-04-21 16:54:59",
"2019-04-21 16:59:59", "2019-04-21 17:04:59", "2019-04-21 17:09:59",
"2019-04-21 17:14:59", "2019-04-21 17:19:59", "2019-04-21 17:24:59",
"2019-04-21 17:29:59", "2019-04-21 17:34:59", "2019-04-21 17:39:59",
"2019-04-21 17:44:59", "2019-04-21 17:49:59", "2019-04-21 17:54:59",
"2019-04-21 17:59:59", "2019-04-21 18:04:59", "2019-04-21 18:09:59",
"2019-04-21 18:14:59", "2019-04-21 18:19:59", "2019-04-21 18:24:59",
"2019-04-21 18:29:59", "2019-04-21 18:34:59", "2019-04-21 18:39:59",
"2019-04-21 18:44:59", "2019-04-21 18:49:59", "2019-04-21 18:54:59",
"2019-04-21 18:59:59", "2019-04-21 19:04:59", "2019-04-21 19:09:59",
"2019-04-21 19:14:59", "2019-04-21 19:19:59", "2019-04-21 19:24:59",
"2019-04-21 19:29:59", "2019-04-21 19:34:59", "2019-04-21 19:39:59",
"2019-04-21 19:44:59", "2019-04-21 19:49:59", "2019-04-21 19:54:59",
"2019-04-21 19:59:59", "2019-04-21 20:04:59", "2019-04-21 20:09:59",
"2019-04-21 20:14:59", "2019-04-21 20:19:59", "2019-04-21 20:24:59",
"2019-04-21 20:29:59", "2019-04-21 20:34:59", "2019-04-21 20:39:59",
"2019-04-21 20:44:59", "2019-04-21 20:49:59", "2019-04-21 20:54:59",
"2019-04-21 20:59:59", "2019-04-21 21:04:59", "2019-04-21 21:09:59",
"2019-04-21 21:14:59", "2019-04-21 21:19:59", "2019-04-21 21:24:59",
"2019-04-21 21:29:59", "2019-04-21 21:34:59", "2019-04-21 21:39:59",
"2019-04-21 21:44:59", "2019-04-21 21:49:59", "2019-04-21 21:54:59",
"2019-04-21 21:59:59", "2019-04-21 22:04:59", "2019-04-21 22:09:59",
"2019-04-21 22:14:59", "2019-04-21 22:19:59", "2019-04-21 22:24:59",
"2019-04-21 22:29:59", "2019-04-21 22:34:59", "2019-04-21 22:39:59",
"2019-04-21 22:44:59", "2019-04-21 22:49:59", "2019-04-21 22:54:59",
"2019-04-21 22:59:59", "2019-04-21 23:04:59", "2019-04-21 23:09:59",
"2019-04-21 23:14:59", "2019-04-21 23:19:59", "2019-04-21 23:24:59",
"2019-04-21 23:29:59", "2019-04-21 23:34:59", "2019-04-21 23:39:59",
"2019-04-21 23:44:59", "2019-04-21 23:49:59", "2019-04-21 23:54:59",
"2019-04-22 00:00:00"] 
time = ["2019-04-21 00:01:00", "2019-04-21 00:20:00", "2019-04-21 00:40:00",
        "2019-04-21 01:00:00", "2019-04-21 01:20:00", "2019-04-21 01:40:00",
        "2019-04-21 02:00:00", "2019-04-21 02:20:00", "2019-04-21 02:40:00",
        "2019-04-21 03:00:00", "2019-04-21 03:20:00", "2019-04-21 03:40:00",
        "2019-04-21 04:00:00", "2019-04-21 04:20:00", "2019-04-21 04:40:00",
        "2019-04-21 05:00:00", "2019-04-21 05:20:00", "2019-04-21 05:40:00",
        "2019-04-21 06:00:00", "2019-04-21 06:20:00", "2019-04-21 06:40:00",
        "2019-04-21 07:00:00", "2019-04-21 07:20:00", "2019-04-21 07:40:00",
        "2019-04-21 08:00:00", "2019-04-21 08:20:00", "2019-04-21 08:40:00",
        "2019-04-21 09:00:00", "2019-04-21 09:20:00", "2019-04-21 09:40:00",
        "2019-04-21 10:00:00", "2019-04-21 10:20:00", "2019-04-21 10:40:00",
        "2019-04-21 11:00:00", "2019-04-21 11:20:00", "2019-04-21 11:40:00",
        "2019-04-21 12:00:00", "2019-04-21 12:20:00", "2019-04-21 12:40:00",
        "2019-04-21 13:00:00", "2019-04-21 13:20:00", "2019-04-21 13:40:00",
        "2019-04-21 14:00:00", "2019-04-21 14:20:00", "2019-04-21 14:40:00",
        "2019-04-21 15:00:00", "2019-04-21 15:20:00", "2019-04-21 15:40:00",
        "2019-04-21 16:00:00", "2019-04-21 16:20:00", "2019-04-21 16:40:00",
        "2019-04-21 17:00:00", "2019-04-21 17:20:00", "2019-04-21 17:40:00",
        "2019-04-21 18:00:00", "2019-04-21 18:20:00", "2019-04-21 18:40:00",
        "2019-04-21 19:00:00", "2019-04-21 19:20:00", "2019-04-21 19:40:00",
        "2019-04-21 20:00:00", "2019-04-21 20:20:00", "2019-04-21 20:40:00",
        "2019-04-21 21:00:00", "2019-04-21 21:20:00", "2019-04-21 21:40:00",
        "2019-04-21 22:00:00", "2019-04-21 22:20:00", "2019-04-21 22:40:00",
        "2019-04-21 23:00:00", "2019-04-21 23:20:00", "2019-04-21 23:40:00",
        "2019-04-21 00:00:00" ]

print(len(time_new))
print(len(load_new_upper))

import random
import numpy as np
import pandas as pd
from scipy.signal import savgol_filter 

def moving_avg(x, n):
    cumsum = np.cumsum(np.insert(x, 0, 0)) 
    return (cumsum[n:] - cumsum[:-n]) / float(n)


for i in range(15):
    result_load_new_upper = []
    for j in range(len(load_new_upper)):
        if load_new_upper[j] <= load_new_upper[j-1]:
            factor = random.uniform(1, 1.1)
        else:
            factor = random.uniform(0.9, 1)
        result_load_new_upper.append(round(load_new_upper[j]*factor, 4))
    
    # load_new_upper_filtered = moving_avg(result_load_new_upper, 1)
    load_new_upper_filtered = savgol_filter(result_load_new_upper, 11, 2)

    with open('load_profile_%s.player' % str(i+1), 'a') as f:
        for k in range(len(load_new_upper)):
            print(time_new[k] + ', ' + str(round(load_new_upper_filtered[k], 4)))
            f.writelines(time_new[k] + ', ' + str(round(load_new_upper_filtered[k], 4)) + "\n")

for i in range(15,40):
    result_load_new_medium = []
    for j in range(len(load_new_medium)):
        if load_new_medium[j] <= load_new_medium[j-1]:
            factor = random.uniform(1, 1.1)
        else:
            factor = random.uniform(0.9, 1)
        result_load_new_medium.append(round(load_new_medium[j]*factor, 4))
    
    # load_new_medium_filtered = moving_avg(result_load_new_medium, 1)
    load_new_medium_filtered = savgol_filter(result_load_new_medium, 11, 2)

    with open('load_profile_%s.player' % str(i+1), 'a') as f:
        for k in range(len(load_new_medium)):
            print(time_new[k] + ', ' + str(round(load_new_medium_filtered[k], 4)))
            f.writelines(time_new[k] + ', ' + str(round(load_new_medium_filtered[k], 4)) + "\n")

for i in range(40,55):
    result_load_new_lower = []
    for j in range(len(load_new_lower)):
        if load_new_lower[j] <= load_new_lower[j-1]:
            factor = random.uniform(1, 1.1)
        else:
            factor = random.uniform(0.9, 1)
        result_load_new_lower.append(round(load_new_lower[j]*factor, 4))
    
    # load_new_lower_filtered = moving_avg(result_load_new_lower, 1)
    load_new_lower_filtered = savgol_filter(result_load_new_lower, 11, 2)

    with open('load_profile_%s.player' % str(i+1), 'a') as f:
        for k in range(len(load_new_lower)):
            print(time_new[k] + ', ' + str(round(load_new_lower_filtered[k], 4)))
            f.writelines(time_new[k] + ', ' + str(round(load_new_lower_filtered[k], 4)) + "\n")
